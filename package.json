{
  "name": "grunt-flake8",
  "description": "Lint your Python projects with flake8",
  "version": "0.1.0",
  "homepage": "https://github.com/btholt/grunt-flake8",
  "author": {
    "name": "Brian Holt",
    "email": "btholt@gmail.com",
    "url": "brianholt.me"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/btholt/grunt-flake8.git"
  },
  "bugs": {
    "url": "https://github.com/btholt/grunt-flake8/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/btholt/grunt-flake8/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.2"
  },
  "peerDependencies": {
    "grunt": "~0.4.2"
  },
  "dependencies": {
    "async": "~0.2.9"
  },
  "keywords": [
    "gruntplugin",
    "python",
    "pep8",
    "lint",
    "pyflakes",
    "flake8"
  ],
  "readme": "# grunt-flake8\n\nLint your Python projects with flake8. [flake8] is a linting tool for project that combines PyFlakes, PEP8, and McCabe's Cyclomatic Complexity script.\n\n## Important\n\nflake8 has its own global and project-level configurations. Any values set in your Gruntfile will override those configurations. If a value is not set in your Gruntfile configuration, flake8 will then use the available project and global level configurations.\n\nMake sure you are running Grunt from within whatever Python virtual environment that flake8 is installed.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.2`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-flake8 --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-flake8');\n```\n\n## The \"flake8\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `flake8` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  flake8: {\n    options: {\n      // Task-specific options go here.\n    },\n    src: [\n      // Files to line go here.\n    ],\n  },\n});\n```\n\n### Options\n\n#### options.errorsOnly\nType: `Boolean`\nDefault value: `false`\n\nIf true, the files passing flake8 will not be shown.\n\n#### options.force\nType: `Boolean`\nDefault value: `false`\n\nIf true, flake8 will not fail even if there are errors.\n\n#### options.maxComplexity\nType: `Integer`\nDefault value: `unset`\n\nIf set, flake8 will enforce a maximum [cyclomatic complexity](http://en.wikipedia.org/wiki/Cyclomatic_complexity).\n\n#### options.maxLineLength\nType: `Integer`\nDefault value: `79`\n\nThe maximum characters in a line. If you want to disable this check, add `E501` to `ignore`.\n\n#### options.select\nType: `Array` of `String`\nDefault value: `[]`\n\nPEP8 rules to enforce. Use the codes given in the [PEP8 documentation](http://pep8.readthedocs.org/en/1.4.6/intro.html#error-codes).\n\n#### options.ignore\nType: `Array` of `String`\nDefault value: `[]`\n\nPEP8 rules to ignore. Use the codes given in the [PEP8 documentation](http://pep8.readthedocs.org/en/1.4.6/intro.html#error-codes).\n\n#### options.hangClosing.\nType: `Boolean`\nDefault value: `false`\n\nHang closing bracket instead of matching indentation of opening bracket's line.\n\n#### options.format\nType: `String`\nDefault value: `default`\n\nThe output style. `'default'` and `'pylint'` styles are built in by default but flake8 can accept custom output styles. [See documenation.](http://flake8.readthedocs.org/en/2.0/)\n\n#### options.showSource\nType: `Boolean`\nDefault value: `false`\n\nShow the source of the linting error.\n\n#### options.first\nType: `Boolean`\nDefault value: `false`\n\nShow only the first instance of a linting error.\n\n#### options.showPep8\nType: `Boolean`\nDefault value: `false`\n\nShow the PEP8 rule of the linting error. Overrides `first` configuration.\n\n#### options.quiet\nType: `Boolean`\nDefault value: `false`\n\nShow the quiet output from flake8.\n\n#### options.verbose\nType: `Boolean`\nDefault value: `false`\n\nShow the verbose output from flake8.\n\n#### options.statistics\nType: `Boolean`\nDefault value: `false`\n\nShow statistics from the linting.\n\n#### options.benchmark\nType: `Boolean`\nDefault value: `false`\n\nShow the performance information from flake8.\n\n### Usage Examples\n\n#### Default Options\nThese options will simply flake8 all of your python files in your Grunt project.\n\n```js\ngrunt.initConfig({\n  flake8: {},\n    src: ['**/*.py']\n  },\n});\n```\n\n#### Custom Options\nThese options will enforce these specific rules. Note that these options will overwrite global- and project-level settings for flake8.\n\n```js\ngrunt.initConfig({\n  flake8: {\n    options: {\n      maxLineLength: 120,\n      maxComplexity: 10,\n      format: 'pylint',\n      hangClosing: true,\n      ignore: ['W292', 'C901', 'F401']\n    },\n    src: ['apps/**/*.py', 'tests/test.py']\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Contributors\n\n- [btholt](https://github.com/btholt)\n\n## Credit\n\n- [tarek's](https://bitbucket.org/tarek) wonderful [flake8](https://bitbucket.org/tarek/flake8/wiki/Home) tool.\n- Inspired by [thusoy's](https://github.com/thusoy) [grunt-pylint](https://github.com/thusoy/grunt-pylint) tool.\n- [jcrocholl's](https://github.com/jcrocholl) great [pep8](https://github.com/jcrocholl/pep8) too.\n- [florent's](https://launchpad.net/~florent.x) amazing [PyFlakes](https://launchpad.net/pyflakes) tool.\n- So much love for [Grunt.js](http://gruntjs.com/) and the devs who work on it.\n\n## Release History\nv0.0.0 - Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-flake8@0.1.0",
  "_from": "grunt-flake8@"
}
